- id: "29075"
  name: Apache Airavata
  summary: Apache AiravataTM is a software framework that enables you to compose,
    manage, execute, and monitor large scale applications and workflows on distributed
    computing resources such as local clusters, supercomputers,computational grids,
    and computing clouds.
  details: Apache AiravataTM is a software framework that enables you to compose,
    manage, execute, and monitor large scale applications and workflows on distributed
    computing resources such as local clusters, supercomputers,computational grids,
    and computing clouds.
  website: https://airavata.apache.org/
  twitter: ""
  github: ""
  apisjson_url: ""
  portal_url: ""
  base_url: ""
  blog: ""
  blogrss: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/apache-airavata.png
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/apache-airavata.png
  tags:
  - Orchestration
  - Microservices
  - Apache Data
  - Apache
- id: "19930"
  name: Datawire
  summary: Datawires open source tools empower developers to rapidly develop resilient
    microservices on Kubernetes.
  details: Datawires open source tools empower developers to rapidly develop resilient
    microservices on Kubernetes.
  website: https://www.datawire.io/
  twitter: https://twitter.com/datawireio
  github: https://github.com/datawire
  apisjson_url: ""
  portal_url: https://github.com/datawire
  base_url: ""
  blog: https://www.datawire.io/blog/
  blogrss: https://www.datawire.io/feed/
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19930-datawire.jpg
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19930-datawire.jpg
  tags:
  - Technology
  - Stack Network
  - SaaS
  - Profiles
  - Microservices
  - API Service Provider
- id: "18744"
  name: Dockpit
  summary: Painlesss isolation for your (micro)service development process. Dockpit
    makes it trivial to develop your (micro)service in isolation. It mocks the APIs
    you depend on and puts data stores, message queus and service registries in predictable
    states.
  details: Painlesss isolation for your (micro)service development process. Dockpit
    makes it trivial to develop your (micro)service in isolation. It mocks the APIs
    you depend on and puts data stores, message queus and service registries in predictable
    states.
  website: https://dockpit.io/
  twitter: https://twitter.com/dockpit
  github: https://github.com/dockpit
  apisjson_url: ""
  portal_url: https://github.com/dockpit
  base_url: ""
  blog: ""
  blogrss: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/dockpit-icon.png
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/dockpit-icon.png
  tags:
  - Stack Network
  - Open Source
  - Microservices
  - Deployments
- id: "18861"
  name: Fiorano Software
  summary: Fiorano powers real time, digital enterprises with a bimodal integration
    and API Management strategy that leverages the best of systematic (centralized,
    high-control) and adaptive (federated, high-speed) approaches to deliver solutions
    across cloud, on-premise and hybrid environments. We provide microservice-centric
    platform infrastructure with sophisticated integration capabilities, Connecting
    An
  details: |
    Fiorano powers real time, digital enterprises with a bimodal integration and API Management strategy that leverages the best of systematic (centralized, high-control) and adaptive (federated, high-speed) approaches to deliver solutions across cloud, on-premise and hybrid environments. We provide microservice-centric platform infrastructure with sophisticated integration capabilities, Connecting Anything to Everything.
  website: http://www.fiorano.com/
  twitter: https://twitter.com/FioranoGlobal
  github: https://github.com/FioranoSoftware
  apisjson_url: ""
  portal_url: https://github.com/FioranoSoftware
  base_url: ""
  blog: http://www.fiorano.com/blog/
  blogrss: http://www.fiorano.com/blog/feed/
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/18861-fiorano-software.jpg
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/18861-fiorano-software.jpg
  tags:
  - Technology
  - SaaS
  - Profiles
  - Microservices
  - Management
  - Enterprise
  - API Service Provider
  - API Management Other
  - Agencies
- id: "19929"
  name: Giant Swarm
  summary: Giant Swarm provides leading organizations an enterprise-grade, multi-tenant
    container platform built on top of Kubernetes both on-premises and in the cloud
    (AWS, Azure, GCE) with 24/7 management and enterprise support to easily run their
    cloud native ...
  details: Giant Swarm provides leading organizations an enterprise-grade, multi-tenant
    container platform built on top of Kubernetes both on-premises and in the cloud
    (AWS, Azure, GCE) with 24/7 management and enterprise support to easily run their
    cloud native ...
  website: https://giantswarm.io/
  twitter: https://twitter.com/giantswarm
  github: https://github.com/giantswarm
  apisjson_url: ""
  portal_url: https://github.com/giantswarm
  base_url: ""
  blog: https://blog.giantswarm.io/
  blogrss: https://blog.giantswarm.io/rss/
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19929-giant-swarm.jpg
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19929-giant-swarm.jpg
  tags:
  - Technology
  - Stack Network
  - SaaS
  - Profiles
  - New
  - Networks
  - Networking
  - Microservices
  - Enterprise
  - API Service Provider
  - API Provider
- id: "19918"
  name: Goa
  summary: goa is a code generation framework built in Go that provides the developer
    with a clear and concise path to generate idiomatic API and Microservice architectures
    by using a design-first methodology.
  details: goa is a code generation framework built in Go that provides the developer
    with a clear and concise path to generate idiomatic API and Microservice architectures
    by using a design-first methodology.
  website: https://goa.design/
  twitter: https://twitter.com/goadesign
  github: https://github.com/goadesign
  apisjson_url: ""
  portal_url: https://github.com/goadesign
  base_url: ""
  blog: https://goa.design/blog/004-xray/
  blogrss: ""
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19918-goa.jpg
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19918-goa.jpg
  tags:
  - Technology
  - Stack Network
  - SaaS
  - Profiles
  - Microservices
  - Deployments
  - API Service Provider
- id: "19981"
  name: Hashi
  summary: HashiCorp enables organizations to use consistent workflows to provision,
    secure, connect, and run any infrastructure for any application.
  details: HashiCorp enables organizations to use consistent workflows to provision,
    secure, connect, and run any infrastructure for any application.
  website: https://www.hashicorp.com/
  twitter: https://twitter.com/hashicorp
  github: https://github.com/hashicorp
  apisjson_url: ""
  portal_url: https://github.com/hashicorp
  base_url: ""
  blog: https://www.hashicorp.com/blog.html
  blogrss: https://www.hashicorp.com/feed.xml
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19981-hashicorp.jpg
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19981-hashicorp.jpg
  tags:
  - Technology
  - SaaS
  - Profiles
  - Orchestration
  - New
  - Microservices
  - Logging
  - Enterprise
  - Automation
  - API Service Provider
  - API Provider
- id: "20079"
  name: hook.io
  summary: Twitter account for hook.io open-source microservice hosting platform.    Tweet
    here for Questions or Support.    File support issues @ https://t.co/jHGKd4iuop
  details: Twitter account for hook.io open-source microservice hosting platform.    Tweet
    here for Questions or Support.    File support issues @ https://t.co/jHGKd4iuop
  website: http://hook.io/
  twitter: https://twitter.com/hookdotio
  github: https://github.com/bigcompany
  apisjson_url: ""
  portal_url: https://github.com/bigcompany
  base_url: https://hook.io/api
  blog: https://hook.io/blog
  blogrss: https://hook.io/blog/feed
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/20079-hook-io.jpg
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/20079-hook-io.jpg
  tags:
  - Webhooks
  - Profiles
  - Microservices
  - Deployments
  - Databases
  - API Service Provider
- id: "28745"
  name: KintoHub
  summary: "We build online tools to make developers\u2019 lives easier. You code
    microservices - we take care of hosting, infra, CI / CD, discovery, compatibility,
    documentation and dependencies."
  details: "We build online tools to make developers\u2019 lives easier. You code
    microservices - we take care of hosting, infra, CI / CD, discovery, compatibility,
    documentation and dependencies."
  website: https://www.kintohub.com
  twitter: https://twitter.com/Kintohub
  github: https://github.com/kintohub
  apisjson_url: ~
  portal_url: https://github.com/kintohub
  base_url: ~
  blog: https://blog.kintohub.com/
  blogrss: https://blog.kintohub.com/feed
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/28745-kintohub.jpg
  logo_width: ~
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/28745-kintohub.jpg
  tags:
  - Technology
  - Microservices
  - API Not Found
- id: "19928"
  name: Magnetic
  summary: 'We started Magnetic.io because we were fed up with the way online systems
    are built in the typical enterprise. Enterprises are held hostage by long and
    slow development projects that result in high risk, big-bang releases. This kills
    innovation and stifles change. It is our mission to change this: Magnetic.io is
    dedicated to developing solutions that enable and stimulate innovation and change,
    whi'
  details: 'We started Magnetic.io because we were fed up with the way online systems
    are built in the typical enterprise. Enterprises are held hostage by long and
    slow development projects that result in high risk, big-bang releases. This kills
    innovation and stifles change. It is our mission to change this: Magnetic.io is
    dedicated to developing solutions that enable and stimulate innovation and change,
    while reducing risk and cost.'
  website: http://magnetic.io/
  twitter: https://twitter.com/magneticio
  github: https://github.com/magneticio
  apisjson_url: ""
  portal_url: https://github.com/magneticio
  base_url: ""
  blog: ""
  blogrss: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/magnetic-io.jpg
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/magnetic-io.jpg
  tags:
  - Stack Network
  - Microservices
  - Deployments
- id: "20078"
  name: Micro
  summary: Micro is simplifying cloud-native development
  details: Micro is simplifying cloud-native development
  website: https://micro.mu/
  twitter: https://twitter.com/microhq
  github: https://github.com/micro
  apisjson_url: ""
  portal_url: https://github.com/micro
  base_url: ""
  blog: https://blog.micro.mu/
  blogrss: ""
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/20078-micro.jpg
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/20078-micro.jpg
  tags:
  - Technology
  - Stack Network
  - SaaS
  - Profiles
  - Microservices
  - Deployments
  - API Provider
- id: "28744"
  name: Mu
  summary: Amazon ECS (Elastic Container Service) provides an excellent platform for
    deploying microservices as containers. However, there is a significant learning
    curve for developers to get their microservices deployed.
  details: Amazon ECS (Elastic Container Service) provides an excellent platform for
    deploying microservices as containers. However, there is a significant learning
    curve for developers to get their microservices deployed.
  website: http://getmu.io
  twitter: ~
  github: ~
  apisjson_url: ~
  portal_url: ~
  base_url: ~
  blog: ~
  blogrss: ~
  logo: https://s3.amazonaws.com/kinlane-productions/api-evangelist/api-butterfly.png
  logo_width: ~
  screenshot: https://s3.amazonaws.com/kinlane-productions/api-evangelist/api-butterfly.png
  tags:
  - Orchestration
  - Microservices
- id: "22989"
  name: nanoscale.io
  summary: Nanoscale.io is the fastest way to build and scale API-enabled microservices
    in the cloud, on-premise, or on-device.
  details: Nanoscale.io is the fastest way to build and scale API-enabled microservices
    in the cloud, on-premise, or on-device.
  website: http://www.nanoscale.io/
  twitter: https://twitter.com/nanoscaleio
  github: https://github.com/Nanoscaleio
  apisjson_url: ""
  portal_url: https://github.com/Nanoscaleio
  base_url: ""
  blog: http://www.nanoscale.io/blog/
  blogrss: http://www.nanoscale.io/feed/
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Blog_???_Nanoscale_io.png
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Blog_???_Nanoscale_io.png
  tags:
  - Microservices
  - Deployments
- id: "19932"
  name: Netsil
  summary: Netsil provides observability and monitoring for cloud apps. DevOps teams
    use Netsils auto-discovered maps & analytics to assure uptime and performance.
  details: Netsil provides observability and monitoring for cloud apps. DevOps teams
    use Netsils auto-discovered maps & analytics to assure uptime and performance.
  website: http://netsil.com/
  twitter: https://twitter.com/Netsil_HQ
  github: https://github.com/netsil
  apisjson_url: ""
  portal_url: https://github.com/netsil
  base_url: ""
  blog: https://blog.netsil.com
  blogrss: https://blog.netsil.com/feed
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19932-netsil.jpg
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19932-netsil.jpg
  tags:
  - Technology
  - Stack Network
  - SaaS
  - Profiles
  - Monitoring
  - Microservices
  - API Service Provider
  - API Provider
  - Analysis
- id: "28151"
  name: Reaktivity
  summary: The Reaktivity Project uses shared memory streams to directly communicate
    between each different layer in the application stack, including both the networking
    protocols and the microservices logic. Parallel execution of each layer in the
    application stack takes full advantage of the available CPU cores to maximize
    throughput with predictably low latency.
  details: The Reaktivity Project uses shared memory streams to directly communicate
    between each different layer in the application stack, including both the networking
    protocols and the microservices logic. Parallel execution of each layer in the
    application stack takes full advantage of the available CPU cores to maximize
    throughput with predictably low latency.
  website: http://reaktivity.org/
  twitter: ""
  github: https://github.com/reaktivity
  apisjson_url: ""
  portal_url: https://github.com/reaktivity
  base_url: ""
  blog: ""
  blogrss: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/reaktivity-logo.png
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/reaktivity-logo.png
  tags:
  - Microservices
- id: "28150"
  name: Reaktivity
  summary: High performance, shared memory microservices. The Reaktivity Project uses
    shared memory streams to directly communicate between each different layer in
    the application stack, including both the networking protocols and the microservices
    logic. Parallel execution of each layer in the application stack takes full advantage
    of the available CPU cores to maximize throughput with predictably low laten
  details: 'High performance, shared memory microservices. The Reaktivity Project
    uses shared memory streams to directly communicate between each different layer
    in the application stack, including both the networking protocols and the microservices
    logic. Parallel execution of each layer in the application stack takes full advantage
    of the available CPU cores to maximize throughput with predictably low latency. '
  website: http://reaktivity.org
  twitter: https://twitter.com/reaktivity
  github: https://github.com/reaktivity
  apisjson_url: ~
  portal_url: https://github.com/reaktivity
  base_url: ~
  blog: ~
  blogrss: ~
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/28150-reaktivity-org.jpg
  logo_width: ~
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/28150-reaktivity-org.jpg
  tags:
  - Microservices
- id: "18857"
  name: Seneca JS
  summary: A Micro-Services toolkit for Node.js. This toolkit lets you write clean
    code that you can scale without needing to refactor. Start with everything in
    one process, and split it all out onto multiple systems when you need to.
  details: A Micro-Services toolkit for Node.js. This toolkit lets you write clean
    code that you can scale without needing to refactor. Start with everything in
    one process, and split it all out onto multiple systems when you need to.
  website: http://senecajs.org/
  twitter: https://twitter.com/senecajs
  github: https://github.com/senecajs
  apisjson_url: ""
  portal_url: https://github.com/senecajs
  base_url: ""
  blog: ""
  blogrss: ""
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/seneca-logo.png
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/seneca-logo.png
  tags:
  - Stack Network
  - Microservices
  - Deployments
- id: "20090"
  name: Vamp
  summary: Deploy and manage microservices with power and ease. Vamp, or the Very
    Awesome Microservices Platform, takes the pain out of running complex and critical
    service based architectures. Vamps core features are a platform-agnostic microservices
    DSL, powerful A-B testing/canary releasing, autoscaling and an integrated metrics
    &amp; event engine.
  details: Deploy and manage microservices with power and ease. Vamp, or the Very
    Awesome Microservices Platform, takes the pain out of running complex and critical
    service based architectures. Vamps core features are a platform-agnostic microservices
    DSL, powerful A-B testing/canary releasing, autoscaling and an integrated metrics
    &amp; event engine.
  website: http://vamp.io/
  twitter: ""
  github: ""
  apisjson_url: ""
  portal_url: ""
  base_url: ""
  blog: http://vamp.io/blog/
  blogrss: http://vamp.io/index.xml
  logo: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Vamp____The_Very_Awesome_Microservices_Platform.png
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Vamp____The_Very_Awesome_Microservices_Platform.png
  tags:
  - Microservices
- id: "19090"
  name: weblab
  summary: 'Microservices at your fingertips. no provisioning or deployments required.
    give your IoT device compute super powers. Run code in response to events. Your
    microservice up in less than 7 seconds. Use our awesome CLI to spin a service
    in seconds. You can also integrate with your favourite CI/CD solution for automated
    deployments. Run your code with just an HTTPS call. As simple as that. Your mobile '
  details: Microservices at your fingertips. no provisioning or deployments required.
    give your IoT device compute super powers. Run code in response to events. Your
    microservice up in less than 7 seconds. Use our awesome CLI to spin a service
    in seconds. You can also integrate with your favourite CI/CD solution for automated
    deployments. Run your code with just an HTTPS call. As simple as that. Your mobile
    or IoT device gets compute superpowers.
  website: https://weblab.io/
  twitter: https://twitter.com/weblabhq
  github: ""
  apisjson_url: ""
  portal_url: ""
  base_url: ""
  blog: ""
  blogrss: ""
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19090-weblab.jpg
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19090-weblab.jpg
  tags:
  - Technology
  - Stack Network
  - Serverless
  - Microservices
  - Internet of Things
  - Deployments
- id: "19931"
  name: Wercker
  summary: Oracles Wercker is a container-centric automation platform used to develop,
    build, test and deploy cloud-native applications. Wercker was founded in 2011
    and has offices in San Francisco, London and Amsterdam. Wercker is used by organisations
    deployin...
  details: Oracles Wercker is a container-centric automation platform used to develop,
    build, test and deploy cloud-native applications. Wercker was founded in 2011
    and has offices in San Francisco, London and Amsterdam. Wercker is used by organisations
    deployin...
  website: http://wercker.com/
  twitter: https://twitter.com/wercker
  github: https://github.com/wercker
  apisjson_url: ""
  portal_url: https://github.com/wercker
  base_url: ""
  blog: http://blog.wercker.com/
  blogrss: ""
  logo: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19931-wercker.jpg
  logo_width: "150"
  screenshot: http://kinlane-productions.s3.amazonaws.com/screen-capture-api/19931-wercker.jpg
  tags:
  - Technology
  - Stack Network
  - SaaS
  - Orchestration
  - Microservices
  - internet
  - Enterprise
  - Containers
  - Command Line Interface